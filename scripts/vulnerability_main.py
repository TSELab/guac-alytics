#!/usr/bin/env python
from ingestion.database.vulnerability_db_init import db_init
from ingestion.parsers.vulnerability_parser import parser
from ingestion.constants import DB_LOC

def insert_records(results):
    for name, cve, description, published_date, last_modified_date, debianbug, scope, releases in results:
        cursor.execute('''select source_id,source_name from source_table where source_name ='{}' limit 1'''.format(name))
        id = cursor.fetchone()
        if id:
            cursor.execute(INSERT_RECS, (id[0],name,cve,description,published_date, last_modified_date,debianbug,scope,str(releases))) 
        else: 
            cursor.execute(INSERT_RECS, ('Null',name,cve,description,published_date, last_modified_date,debianbug,scope,str(releases)))   
            
        conn.commit()
        
 
if __name__ == "__main__":
        conn,cursor = db_init(DB_LOC) # Initialize the database  
        INSERT_RECS = '''INSERT OR IGNORE INTO vulnerability_table (source_id,package,vulnerability,description,published_date, last_modified_date,debianbug,scope,releases) VALUES (?,?,?,?,?,?,?,?,?)'''
        results = parser() # Parse the data
        insert_records(results)
        conn.close()    