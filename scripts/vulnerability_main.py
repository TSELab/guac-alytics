#!/usr/bin/env python
import requests
from bs4 import BeautifulSoup

INSERT_RECS = '''INSERT OR IGNORE INTO vulnerability_table (source_id,package,vulnerability,description,published_date, last_modified_date,debianbug,scope,releases) VALUES (?,?,?,?,?,?,?,?,?)'''

def parse_vulnerability_data(vulnerability_id):
    url = f"https://nvd.nist.gov/vuln/detail/{vulnerability_id}"
    
    response = requests.get(url)
    if response.status_code == 200:
        soup = BeautifulSoup(response.content, 'html.parser')
        
        # Find and extract the published date
        published_date_element = soup.find('span', {'data-testid': 'vuln-published-on'})
        published_date = published_date_element.text.strip() if published_date_element else None
        
        # Find and extract the last modified date
        last_modified_date_element = soup.find('span', {'data-testid': 'vuln-last-modified-on'})
        last_modified_date = last_modified_date_element.text.strip() if last_modified_date_element else None
        
        return published_date, last_modified_date
    
    return None, None

def insert_records(cur,name,cve,description,debianbug,scope,releases):
    cur.execute("""CREATE TABLE IF NOT EXISTS vulnerability_table(
                source_id integer,
                package varchar,
                vulnerability varchar,
                description varchar,
                published_date datetime, 
                last_modified_date datetime,
                debianbug integer,
                scope varchar,
                releases varchar,
                FOREIGN KEY(source_id) references source_table(source_id) )""") 
    cur.execute('''select source_id,source_name from source_table where source_name ='{}' limit 1'''.format(name))
    id = cur.fetchone()
    published_date, last_modified_date = parse_vulnerability_data(cve)
    if id:
        cur.execute(INSERT_RECS, (id[0],name,cve,description,published_date, last_modified_date,debianbug,scope,str(releases))) 
    else: 
        cur.execute(INSERT_RECS, ('Null',name,cve,description,published_date, last_modified_date,debianbug,scope,str(releases)))   
